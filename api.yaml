apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec: 
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: docker-api:latest
          env:
            - name: PROFILE
              value: "prod"
            - name: DB_URL
              value: "jdbc:mysql://mysql-service/facts"
            - name: DB_USER
              value: "root"
            - name: DB_PASSWORD
              value: "secret"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet: 
              path: /favorites
              port: 8080
            periodSeconds: 10
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /facts
              port: 8080
            periodSeconds: 10
            initialDelaySeconds: 5
          startupProbe:
            httpGet:
              path: /favorites
              port: 8080
            periodSeconds: 10
            initialDelaySeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  type: LoadBalancer
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
spec:
  rules:
    - host: localhost
      http:
        paths:
          - backend:
              service:
                name: api-service
                port:
                  number: 8080
            path: /
            pathType: Prefix